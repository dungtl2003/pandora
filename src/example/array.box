add std;

fun print_array_fixed_size(arr: [int; 5], header: str) {
    std.println(header);
    for a in arr {
        std.print(a as str + " ");
    }
    std.println("");
}

fun create_array(len: int) -> [int] {
    yeet [0; len];
}

fun create_array_fixed_length(len: int) -> [int; 5] {
    yeet [0; len];
}

fun print_array(arr: [int], header: str) {
    std.println(header);
    for a in arr {
        std.print(a as str + " ");
    }
    std.println("");
}

fun divide() {
    std.println("");
    std.println("========================");
    std.println("");
}

set arr: [int; 5] = [1, 2, 3, 4, 5];
print_array(arr, "Normal initialization");

divide();

set arr: [int] = [1, 2, 3, 4, 5];
print_array(arr, "Without length initialization");

divide();

set arr: [int; 5]; 
arr = [1, 2, 3, 4, 5];
print_array(arr, "Without initialization");

// set arr: [int]; // this will not work

divide();

set mut arr: [int; 5]; 
arr = [1, 2, 3, 4, 5];
arr = [5, 4, 3, 2, 1];
arr[2] = 10;
print_array(arr, "Mutate array");

divide();

print_array_fixed_size([1, 2, 3, 4, 5], "Call fixed array size function");
// print_array_fixed_size([1, 2, 3, 4], "Call fixed array size function"); // this will not work
/* This will not work as well 
set arr: [int] = [1, 2, 3, 4, 5, 6];
print_array_fixed_size(arr, "Call fixed array size function");
*/

divide();

set len: int = 15;
set arr: [int; len] = [5; len];
print_array(arr, "Init with variable length");

/*
set arr: [int; 5];
std.println(arr[2] as str); // array is not initialized yet so cannot access index
*/

divide();

set arr: [int] = [5; 5];
std.println("Access array index");
std.println("arr[0] = " + arr[0] as str);
std.println("arr[2] = " + arr[2] as str);
// std.println("arr[6] = " + arr[6] as str); // this will not work
// std.println("arr[-1] = " + arr[-1] as str); // this will not work
// std.println("arr[1.5] = " + arr[1.5] as str); // this will not work

divide();

print_array(create_array(10), "Function returns array");

divide();

print_array(create_array_fixed_length(5), "Function returns array fixed length");
// print_array(create_array_fixed_length(15), "Function returns array fixed length"); // this will not work

std.println("");
