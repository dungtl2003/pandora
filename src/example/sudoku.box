// CANNOT SOLVE YET!!! 

fun print_board(board: [[int]]) {
    for row in board {
        for col in row {
            print(col as str + " ");
        }
        println("");
    }
    println("");
}

fun debug(m: [[bool]]) {
    for row in m {
        for col in row {
            print(col as str + " ");
        }
        println("");
    }
    println("");
}

fun calculate_square(x: int, y: int) -> int {
    yeet y / 3 + (x / 3) * 3 + 1;
}

fun solve(board: [[int]]) {
    set row_has: [[bool]] = [[false; 10]; 10];
    set col_has: [[bool]] = [[false; 10]; 10];
    set square_has: [[bool]] = [[false; 10]; 10];

    set mut row: int = 0;
    set mut col: int = 0;
    set mut value: int;

    during row < 9 {
        col = 0;
        during col < 9 {
            value = board[row][col];
            row_has[row][value] = true;
            col_has[col][value] = true;
            set sqrt: int = calculate_square(row, col);
            square_has[sqrt][value] = true;

            col += 1;
        }

        row += 1;
    }
}

set board: [[int; 9]; 9] = [    
    [0, 0, 0, 0, 0, 0, 6, 0, 2],
    [0, 5, 7, 0, 4, 0, 0, 3, 1],
    [0, 0, 3, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 7],
    [1, 0, 0, 7, 5, 0, 0, 0, 0],
    [7, 4, 0, 0, 1, 0, 0, 9, 6],
    [4, 2, 0, 0, 8, 5, 0, 6, 0],
    [0, 0, 1, 3, 7, 0, 0, 0, 8],
    [0, 0, 0, 9, 0, 0, 0, 1, 0],
];

solve(board);
